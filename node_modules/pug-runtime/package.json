{
  "_args": [
    [
      {
        "raw": "pug-runtime@^3.0.1",
        "scope": null,
        "escapedName": "pug-runtime",
        "name": "pug-runtime",
        "rawSpec": "^3.0.1",
        "spec": ">=3.0.1 <4.0.0",
        "type": "range"
      },
      "/storage/emulated/0/my-lib/node_modules/pug"
    ]
  ],
  "_from": "pug-runtime@^3.0.1",
  "_hasShrinkwrap": false,
  "_id": "pug-runtime@3.0.1",
  "_location": "/pug-runtime",
  "_nodeVersion": "12.20.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/pug-runtime_3.0.1_1614540714016_0.20219458972210047"
  },
  "_npmUser": {
    "name": "pug-bot",
    "email": "pug-bot@rollingversions.com"
  },
  "_npmVersion": "6.14.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pug-runtime@^3.0.1",
    "scope": null,
    "escapedName": "pug-runtime",
    "name": "pug-runtime",
    "rawSpec": "^3.0.1",
    "spec": ">=3.0.1 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pug",
    "/pug-attrs",
    "/pug-code-gen"
  ],
  "_resolved": "https://registry.npmjs.org/pug-runtime/-/pug-runtime-3.0.1.tgz",
  "_shasum": "f636976204723f35a8c5f6fad6acda2a191b83d7",
  "_shrinkwrap": null,
  "_spec": "pug-runtime@^3.0.1",
  "_where": "/storage/emulated/0/my-lib/node_modules/pug",
  "author": {
    "name": "ForbesLindesay"
  },
  "browser": {
    "fs": false
  },
  "dependencies": {},
  "description": "The runtime components for the pug templating language",
  "devDependencies": {
    "uglify-js": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-L50zbvrQ35TkpHwv0G6aLSuueDRwc/97XdY8kL3tOT0FmhgG7UypU3VztfV/LATAvmUfYi4wNxSajhSAeNN+Kg==",
    "shasum": "f636976204723f35a8c5f6fad6acda2a191b83d7",
    "tarball": "https://registry.npmjs.org/pug-runtime/-/pug-runtime-3.0.1.tgz",
    "fileCount": 10,
    "unpackedSize": 16952,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgO++qCRA9TVsSAnZWagAA/yUP/2ANmVBKFhp7b18be3Do\nssrbHFED4yiV/61w9yKONhWgktlYRHnB5FpH2gJQAxID3FqOjpcZXJk1LT1+\n1U9sOxCPTvV8pdXIPXo/ybWEkyOZRznhe2zJs46w5hCqXyqwYYLbLJPpOYvj\nBYvuZz1hAnTAksXF7RKg5bXuhtkIXyQ5Z0FxUGv+3j2t3GSVEfpyBbe9bXbi\n4BDj+ZXhbrZ46fx7lHaeu70+AF0jWcg791ThwTgCgu/Z9zB7QbOFm8wD2yB+\nyYatIR0rEYdlSTEqKJ4MH6q+Y8einFXiaPXXd91CK+d3DB3oLqv5fWBwb441\nJfM3IoiVcamkgEb50YID/tKhiKQ/xGFr0TSRGsyrqjZazqAH5jdbbThc2gJX\n06GOuTfpbpV+oWK1aNPDHnOkxLhhoG0OsfWnWC3QEip+TzcVxxJxvFYuUkmp\n6xNocF7oCnbyheOuibNCpZneRqlILkZylQvSacaCIH1tVMyWZLWEdhBGaV4Q\nj4okmMHlE25nEypVh5589GEgM4AHVjpFGjP+YcKGRs78FG0Jna/wW2OmJD08\nfNe+rEiURhOiS9Vt6KEHXsxaERoj5xg5MHNajzevFswPecLtC7froOKE/QY/\nWmSIx4efAXJOgpQ9FwjW7ybhF865N71LN9us1QPKpiHeHlpBsiM3UbsdYhVP\nglkG\r\n=mCM8\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "build.js",
    "index.js",
    "lib/dependencies.js",
    "lib/internals.js",
    "lib/sources.js",
    "wrap.js"
  ],
  "keywords": [
    "pug"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "pug-bot",
      "email": "pug-bot@rollingversions.com"
    }
  ],
  "name": "pug-runtime",
  "optionalDependencies": {},
  "readme": "# pug-runtime\n\nThe runtime components for the pug templating language\n\n[![Build Status](https://img.shields.io/travis/pugjs/pug-runtime/master.svg)](https://travis-ci.org/pugjs/pug-runtime)\n[![Dependencies Status](https://david-dm.org/pugjs/pug/status.svg?path=packages/pug-runtime)](https://david-dm.org/pugjs/pug?path=packages/pug-runtime)\n[![DevDependencies Status](https://david-dm.org/pugjs/pug/dev-status.svg?path=packages/pug-runtime)](https://david-dm.org/pugjs/pug?path=packages/pug-runtime&type=dev)\n[![NPM version](https://img.shields.io/npm/v/pug-runtime.svg)](https://www.npmjs.org/package/pug-runtime)\n\n## Installation\n\n    npm install pug-runtime\n\n## Usage\n\n\nYou can call runtime methods directly using `runtime.method`.  This is particularly useful when compiling to deal with things that are already known at compile time.\n\n```js\nvar runtime = require('pug-runtime');\n\nassert(runtime.attr('foo', 'bar', true, true) === ' foo=\"bar\"');\n```\n\nYou can also build a string with a given list of functions available as `pug_method` by calling `build(arrayOfMethods)`.  This is useful for inlining runtime functions within the compiled templates.\n\n```js\nvar build = require('pug-runtime/build');\nvar src = build(['attr']);\n\nvar attr = Function('', src + ';return pug_attr;')();\nassert(attr('foo', 'bar', true, true) === ' foo=\"bar\"');\n```\n\nWhen testing code compiled for the browser in Node.js, it is necessary to make the runtime available. To do so, one can use `require('pug-runtime/wrap')`:\n\n```js\nvar pug = require('pug');\nvar wrap = require('pug-runtime/wrap');\n\nvar pugSrc = 'p= content';\n// By default compileClient automatically embeds the needed runtime functions,\n// rendering this module useless.\nvar compiledCode = pug.compileClient(pugSrc, {\n  externalRuntime: true\n});\n//=> 'function template (locals) { ... pug.escape() ... }'\n\nvar templateFunc = wrap(compiledCode);\ntemplateFunc({content: 'Hey!'});\n//=> '<p>Hey!</p>'\n\n// Change template function name to 'heyTemplate'\ncompiledCode = pug.compileClient(pugSrc, {\n  externalRuntime: true,\n  name: 'heyTemplate'\n});\n//=> 'function heyTemplate (locals) { ... }'\n\ntemplateFunc = wrap(compiledCode, 'heyTemplate');\ntemplateFunc({content: 'Hey!'});\n//=> '<p>Hey!</p>'\n```\n\n\n## License\n\n  MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/pugjs/pug/tree/master/packages/pug-runtime"
  },
  "scripts": {
    "build": "node prepublish",
    "prepublish": "node prepublish",
    "pretest": "npm run prepublish"
  },
  "version": "3.0.1"
}
